---
import MusicsTable from '@/components/blocks/MusicsTable.astro';
import Layout from '../../layouts/Layout.astro';
import { CardPlayButton } from '@/components/buttons/CardPlayButton';
import Rank from '@/icons/Rank.astro';
import { allPlaylists, songs } from '@/lib/data';
import Back from '@/icons/Back.astro';
const { id } = Astro.params;
const { cookies, redirect } = Astro;

const accessToken = cookies.get('sb-access-token') ? true : false;
const refreshToken = cookies.get('sb-refresh-token') ? true : false;
//console.log(accessToken, refreshToken);

let playlistAlb: any,
    playListSongs,
    playlist: any = [];

let hours = 0,
    remainingMinutes,
    seconds,
    minutes;

if (accessToken && refreshToken) {
    const url = Astro.url.origin;
    //console.log(url);

    try {
        const playlistReq = await fetch(
            `${url}/api/playlist/getPlaylist?id=${id}`
        );
        playlist = await playlistReq.json();
        //console.log(playlist);
    } catch (error) {
        console.error(error);

        return redirect('/');
    }

    //console.log(playlist);
    playlistAlb = await fetch(`${url}/api/playlist/getPlaylistsContent`)
        .then((res) => res.json())
        .then((res) => res[0]);

    console.log(playlistAlb);

    const timeSongs = playlist.map((song: any) => {
        //console.log(song.data_song.duration);
        return song.data_song.duration;
    });

    const totalTime = timeSongs.reduce(
        (total: number, duration: number) => total + duration,
        0
    );
    minutes = Math.floor(totalTime / 60);
    seconds = totalTime % 60;
    hours = Math.floor(minutes / 60);
    remainingMinutes = minutes % 60;
    //console.log(`${hours}:${remainingMinutes}:${seconds}`);
} else {
    return redirect('/signin');
}
---

<Layout title="Spotify Clone">
    <div
        id="playlist-container"
        class="relative flex flex-col h-full bg-zinc-900 overflow-x-hidden"
        transition:name=`playlist ${id} box`>
        <!-- <PageHeader /> -->

        <header class="flex flex-row gap-8 px-6 mt-12">
            <picture class="aspect-square w-52 h-52 flex-none">
                <img
                    src={playlistAlb?.cover}
                    alt={`Cover of ${playlistAlb?.title}`}
                    class="object-cover w-full h-full shadow-lg rounded-md"
                    transition:name=`playlist ${id} image`
                />
            </picture>

            <div class="flex flex-col justify-between">
                <h2 class="flex flex-1 items-end">Playlist</h2>
                <div>
                    <h1 class="text-5xl font-bold block text-white">
                        {playlistAlb?.title}
                        <span
                            transition:name=`playlist ${playlistAlb?.id} title`
                        ></span>
                    </h1>
                </div>

                <div class="flex-1 flex items-end">
                    <div class="text-sm text-gray-300 font-normal">
                        <div
                            transition:name=`playlist ${playlistAlb?.id} artists`>
                            Artista: <span class="font-bold"
                                >{playlistAlb?.artists}</span
                            >
                        </div>
                        <p class="mt-1">
                            <span class="text-white"
                                >{playlist.length} canciones</span
                            >,<br />
                            {hours > 0 ? `${hours}:` : ''}{remainingMinutes}:{
                                seconds
                            } total
                        </p>
                    </div>
                </div>
            </div>
        </header>

        <a
            href="/"
            class="m-auto w-12 h-12 rounded-full bg-green-500 flex justify-center items-center absolute right-4 top-4"
            ><Back /></a
        >

        <div class="pl-6 pt-6">
            <CardPlayButton
                client:load
                id={id}
                size="large"
                transition:name=`playlist ${id} image`
            />
        </div>

        <div class="relative z-10 px-6 pt-10"></div>

        <div
            class="absolute inset-0 bg-gradient-to-t from-zinc-900 via-zinc-900/80 -z-[1]">
        </div>

        <section class="p-6">
            <MusicsTable data={playlist} />
        </section>
    </div>
</Layout>
